#
# Solution to Project Euler problem 29
# https://projecteuler.net/problem=29
# Distinct Powers
#
# Consider all integer combinations of a^b fo 2 <= a <= 5 and 2<= b <= 5:
# 2^2 = 4 ... 2^5 = 32
# 3^2 = 9 ... 3^5 = 243
# ...
# 5^2 = 25 ... 5^5 = 3125
#
# If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:
# 4, 8, 9, 16, 25 ... 1024, 3125
#
# How many distinct terms are in the sequence generated by a^  b for 2 <= a <= 100 and 2<= b <= 100?


def distrinct_powers_terms(a_max, b_max):
    distinct = set()
    for a in range(2, a_max + 1):
        for b in range(2, b_max + 1):
            distinct.add(a ** b)
    return len(distinct)


def solve():
    return distrinct_powers_terms(100, 100)


if __name__ == "__main__":
    print(solve())
